{"version":3,"file":"js/app.1defe6e8.js","sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/react/index.js from dll-reference _dll_vendor","webpack:///delegated ./node_modules/redux/es/redux.js from dll-reference _dll_vendor","webpack:///delegated ./node_modules/react-dom/index.js from dll-reference _dll_vendor","webpack:///external \"_dll_vendor\"","webpack:///delegated ./node_modules/react-router-dom/esm/react-router-dom.js from dll-reference _dll_vendor","webpack:///delegated ./node_modules/react-redux/es/index.js from dll-reference _dll_vendor","webpack:///./src/assets/css/app.css","webpack:///delegated ./node_modules/webpack/buildin/global.js from dll-reference _dll_vendor","webpack:///./src/store/util.js","webpack:///./src/store/modules/counter.js","webpack:///./src/store/modules/todoList.js","webpack:///./src/store/modules/loading.js","webpack:///./src/store/index.js","webpack:///./src/pages/MyChart.js","webpack:///./src/pages/App.js","webpack:///./src/index.js"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([65,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = (__webpack_require__(3))(0);","module.exports = (__webpack_require__(3))(24);","module.exports = (__webpack_require__(3))(21);","module.exports = _dll_vendor;","module.exports = (__webpack_require__(3))(47);","module.exports = (__webpack_require__(3))(53);","// extracted by mini-css-extract-plugin","module.exports = (__webpack_require__(3))(30);","import produce from 'immer';\n\nconst getKey = (str, flag) => {\n  const index = str.indexOf(flag);\n  return str.substring(index + 1, str.length + 1);\n};\n\nexport const handleActions = ({ state, action, reducers, namespace = '' }) => {\n  const obj = Object.keys(reducers)\n    .map(key => namespace + '/' + key)\n    .includes(action.type)\n    ? produce(state, draft => reducers[getKey(action.type, '/')](draft, action))\n    : state;\n  return obj;\n};\n\n","\nimport { handleActions } from '../util';\n\nconst initialState = {\n  count: 0\n};\nconst reducers = {\n  add(state, action) {\n    state.count++;\n    console.log(state.count);\n  },\n  minus(state, action) {\n    state.count--;\n  }\n};\nexport default (state = initialState, action) => handleActions({\n  state,\n  action,\n  reducers,\n  namespace: 'counter'\n});\n\n","import { handleActions } from '../util';\n\nconst initialState = {\n  inputValue: '123',\n  list: []\n};\nconst reducers = {\n  add(state, action) {\n    state.list.push(action.data);\n  },\n  delete(state, action) {\n    state.list.splice(action.data, 1);\n  },\n  changeInput(state, action) {\n    state.inputValue = action.data;\n  }\n};\n\nexport default (state = initialState, action) => handleActions({\n  state,\n  action,\n  reducers,\n  namespace: 'todo'\n});\n","\nimport { handleActions } from '../util';\n\nconst initialState = {\n  loading: false\n};\nconst reducers = {\n  open(state, action) {\n    state.loading = true;\n  },\n  closed(state, action) {\n    state.loading = false;\n  }\n};\nexport default (state = initialState, action) => handleActions({\n  state,\n  action,\n  reducers,\n  namespace: 'loading'\n});\n\n","import { createStore, combineReducers } from 'redux';\n// import thunk from 'redux-thunk';\nimport counter from './modules/counter';\nimport todoList from './modules/todoList';\nimport loading from './modules/loading';\nimport { persistStore, persistReducer } from 'redux-persist';\n//  存储机制，可换成其他机制，当前使用sessionStorage机制\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { devToolsEnhancer } from 'redux-devtools-extension'; // redux调试工具\n\nconst reducers = combineReducers({\n  counter,\n  todoList,\n  loading,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession\n  // navigation不会被存入缓存中，其他会，适用于少部分数据需要实时更新\n  // blacklist: ['navigation']\n  // navigation会存入缓存，其他不会存，适用于大多数数据并不会实时从后台拿数据\n  // whitelist: ['navigation']\n};\nconst myPersistReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  myPersistReducer,\n  devToolsEnhancer(),\n);\n\nexport const persistor = persistStore(store);\n// const _dispatch = store.dispatch;\n// store.dispatch = (type, data) => _dispatch({type, data});\nexport default store;\n","\nimport React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport {\n    Chart,\n    Interval,\n    Axis,\n    Tooltip,\n  } from 'bizcharts';\n\nconst MyChart = (props) => {\n    let {\n      datas,\n    } = props;\n    var china;\n    var series = [];\n    let [ isFull, setFull ] = useState(false);\n    let [ isClick, setClick ] = useState(false);\n    let [ data2, setData2 ] = useState([]);\n    let [ isVisible, setVisible ] = useState(false);\n    let [ isFixed, setFixed ] = useState(false);\n    let [ xy_value, setXYValue ] = useState(null); // 保存鼠标在页面上移动的 x / y 轴的坐标值\n    let [ line_datas, setLineData ] = useState(null); // 保存飞线图的数据\n    let [ currentIndex, setCurrentIndex ] = useState(0); // 当前tab项的索引值，默认为0，第一项\n    // 地图数据\n    var chinaGeoCoordMap = {};\n    \n    // 全局保存地图缩放的zoom 默认为1\n    var GLOBAL_ZOOM = 1;\n  \n    // 保存用户是否已经点击了飞线图的状态 默认未点击，点击后，通过该参数锁定\n    var isAlreadyClickFlight = false;\n  \n    // 保存options\n    window.GLOBAL_OPTIONS = {};\n  \n    // 保存 seriesIndex 索引值\n    var GLOBAL_SERIES_INDEX = 1;\n  \n    // 保存 飞线图的宽度，默认为1\n    var GLOBAL_LINE_WIDTH = 1;\n  \n    function convertData(data, formdata, formdataValue) {\n      var res = [];\n      for(var i = 0; i < data.length; i++) {\n          var dataItem = data[i];\n          var fromCoord = chinaGeoCoordMap[dataItem[0].name];\n  \n          if(fromCoord && formdataValue) {\n            res.push(\n                [ \n              { \n                formName: formdata, \n                coord: formdataValue,\n              },\n              // 飞线往哪里去\n                  { \n                toName: dataItem[0].name, \n                coord: fromCoord, \n                value: dataItem[0].value,\n                item: dataItem[0]\n              }\n                ]\n            );\n          }\n      }\n      return res;\n    }\n    /*\n     * @param { formdata } 中心点\n     * @param { chinaDatas } 飞行数据\n     * @param { formdataValue } 中心点坐标\n    */\n    function seriesFunc(formdata, chinaDatas, formdataValue) {\n      let name = '';\n      let color = '';\n      let startColor = ''; // 渐变起始颜色\n      let levelParams = 0; // 保存判断级别的变量\n      if (currentIndex == 0) { // 碳排量\n        levelParams = chinaDatas[0][0].totalCarbonEmission;\n      } else if (currentIndex == 1) { // 单位公里碳排量\n        levelParams = chinaDatas[0][0].unitCarbonEmission;\n      }\n      if (levelParams >= 9000) {\n          name = '9000以上';\n          color = '#c51b37';\n          startColor = '#b34c5d';\n      } else if (levelParams >= 6000 && levelParams < 9000) {\n          name = '6000～9000';\n          color = '#e28e10';\n          startColor = '#886127';\n      } else if (levelParams >= 3000 && levelParams < 6000) {\n          name = '3000～6000';\n          color = '#3f90ff';\n          startColor = '#2f5c98';\n      } else if (levelParams >= 0 && levelParams < 3000) {\n          name = '0～3000';\n          color = '#14be8b';\n          startColor = '#3d675b';\n      }\n      if (chinaDatas && chinaDatas.length) {\n          [[formdata, chinaDatas]].forEach(function(item, i) {\n            series.push(\n              {\n                type: 'lines',\n                name: name,\n                coordinateSystem: 'geo',\n                zlevel: 2,\n                effect: {\n                  show: true,\n                  period: 8, //箭头指向速度，值越小速度越快\n                  trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n                  // symbol: 'image://./images/airline.png', // 箭头图标\n                  symbol: 'arrow',\n                  // symbolSize: [20, 20], //图标大小\n                  symbolSize: 10,\n                  color: color, // 图标颜色\n                },\n                lineStyle: {\n                  normal: {\n                    show: true,\n                    width: 2, //尾迹线条宽度\n                    opacity: 0.6, //尾迹线条透明度\n                    curveness: 0.3, //尾迹线条曲直度\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                      {\n                        offset: 0,\n                        color: color // 0% 处的颜色\n                      },\n                      {\n                        offset: 1,\n                        color: startColor // 100% 处的颜色\n                      }\n                    ])\n                  },\n                },\n                data: convertData(item[1], formdata, formdataValue),\n              },\n              // 出发点\n              {\n                type: 'effectScatter',\n                coordinateSystem: 'geo',\n                zlevel: 2,\n                hoverAnimation: true, // 鼠标移动上去后效果\n                rippleEffect: { //涟漪特效\n                  period: 8, //动画时间，值越小速度越快\n                  brushType: 'stroke', //波纹绘制方式 stroke, fill\n                  scale: 10 //波纹圆环最大限制，值越大波纹越大\n                },\n                label: {\n                  normal: {\n                    show: true,\n                    position: 'bottom', //显示位置\n                    offset: [6, 6], //偏移设置\n                    color: '#a7b9cd',\n                    formatter: function(params){ // 圆环显示文字\n                      // return '';\n                      return params.data.name;\n                    },\n                    fontSize: 11,\n                  },\n                  // 高亮时效果\n                  emphasis: {\n                    show: true,\n                    areaColor: 'null',\n                  }\n                },\n                symbol: 'circle',\n                symbolSize: function(val) {\n                  return 5 + val[2] * 5; // 圆环大小\n                },\n                itemStyle: {\n                  normal: {\n                    show: false,\n                    color: color,\n                  }\n                },\n                data: [{\n                  name: chinaDatas[0][0].isStartAndEnd ? '' : formdata,\n                  value: formdataValue,\n                }],\n              },\n              // 到达点\n              {\n                type: 'effectScatter',\n                coordinateSystem: 'geo',\n                zlevel: 2,\n                hoverAnimation: true, // 鼠标移动上去后效果\n                rippleEffect: { //涟漪特效\n                  period: 8, //动画时间，值越小速度越快\n                  brushType: 'stroke', //波纹绘制方式 stroke, fill\n                  number: 1,\n                  scale: 10 //波纹圆环最大限制，值越大波纹越大\n                },\n                label: {\n                  normal: {\n                    show: true,\n                    position: 'right', //显示位置\n                    color: '#a7b9cd',\n                    offset: [6, 6], //偏移设置\n                    formatter: function(params) { // 圆环显示文字\n                      // return '';\n                      return params.data.name;\n                    },\n                    fontSize: 11\n                  },\n                  // 高亮时效果\n                  emphasis: {\n                    show: true,\n                    areaColor: 'null',\n                  }\n                },\n                symbol: 'circle',\n                  symbolSize: function(val) {\n                    return 2 + val[2] * 5; // 圆环大小\n                  },\n                  itemStyle: {\n                    normal: {\n                      show: false,\n                      color: color,\n                    }\n                  },\n                  data: item[1].map(function(dataItem) {\n                    return {\n                      name: chinaDatas[0][0].isStartAndEnd ? '' : dataItem[0].name,\n                      value: chinaGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n                    };\n                  }),\n                }\n              )\n          })\n      }\n    }\n    /*\n     * 获取飞行数据的所有原点和终点\n     * @return { Array } 返回所有飞行数据的原点和终点\n     * 类似数据如下: [{label: '深圳', value: ['经度', '纬度']}, ....依次类推]\n    */\n    function getFlightOrigins(data) {\n      let rets = []; // 保存飞行数据的原点\n      let rets2 = []; // 保存飞行数据的终点\n      let obj = {};\n      let obj2 = {};\n      if (data && data.length) {\n        data.forEach(item => {\n          rets.push({\n            label: item.shipment,\n            value: item.shipmentCoordinate\n          });\n          rets2.push({\n            label: item.destination,\n            value: item.destinationCoordinate,\n          })\n        })\n      }\n      const flightOriginsStart = rets.reduce((prev, cur) => {\n        obj[cur.label] ? '' : obj[cur.label] = true && prev.push(cur);\n        return prev;\n      }, []);\n      rets2 = rets2.concat(rets);\n      const flightOriginsEnd = rets2.reduce((prev, cur) => {\n        obj2[cur.label] ? '' : obj2[cur.label] = true && prev.push(cur);\n        return prev;\n      }, []);\n      let obj3 = {};\n      if (flightOriginsEnd && flightOriginsEnd.length) {\n        flightOriginsEnd.forEach(item => {\n          obj3[item.label] = item.value;\n        })\n      }\n      chinaGeoCoordMap = obj3;\n      return {\n        flightOriginsStart,\n        flightOriginsEnd,\n      }\n    };\n  \n    // 先克隆一下对象，遍历下，给对象添加新属性，如果原点和目标点相同的话，说明既是原点又是终点\n    const { flightOriginsStart } = getFlightOrigins(datas);\n    for (let i = 0; i < flightOriginsStart.length; i++) {\n      const itemLabel = flightOriginsStart[i].label;\n      for (let j = 0; j < datas.length; j++) {\n        if (datas[j].destination === itemLabel) {\n          datas[j].isStartAndEnd = true;\n        } \n      }\n    }\n    /**\n     * 获取飞行数据的所有原点对应的所有终点\n     * @param { flightOrigins } 根据飞行数据的所有原点来获取对应的所有终点数据\n     * 原起点数据如下 flightOrigins = [{label: '深圳', value: ['经度', '纬度']}, ....依次类推] \n     * @return { Array } 返回所有飞行数据的终点 key对应的飞行原点的label\n     * 返回的数据如下：[\n     *  {'深圳': [ [[{name: '', value: 0}]], [[{name: '', value: 0}]] ]},\n     *  {'东莞': [ [[{name: '', value: 0}]], [[{name: '', value: 0}]] ]}\n     *  .... 以此类推\n     * ]\n     */\n    function getFlightEnd(flightOrigins) {\n      let rets = [];\n      if (flightOrigins && flightOrigins.length) {\n        for (let i = 0; i < flightOrigins.length; i++) {\n          const itemLabel = flightOrigins[i].label; // 获取飞行数据的原点对应的所有终点数据\n          rets.push(getItemFlightEnd(itemLabel, flightOrigins[i].value));\n        }\n      }\n      return rets;\n    };\n    function getItemFlightEnd(itemLabel, pos) {\n      let rets = [];\n      let obj = {};\n      for (let i = 0; i < datas.length; i++) {\n        const item = datas[i];\n        if (itemLabel === item.shipment) {\n          rets.push([[{\n            name: item.destination,\n            value: 0,\n            unitCarbonEmission: item.unitCarbonEmission,\n            totalCarbonEmission: item.totalCarbonEmission,\n            totalTruckSize: item.totalTruckSize,\n            totalKilometres: item.totalKilometres,\n            isStartAndEnd: item.isStartAndEnd || false,\n            carSizeData: item.carSizeData,\n          }]])\n        }\n      }\n      obj = {\n        'label': itemLabel,\n        'pos': pos,\n        'value': rets,\n      }\n      return obj;\n    }\n    /*\n     * 定位legend\n     * 获取legend的个数\n    */\n    function getLegendCount() {\n      const { series = [] } = window.GLOBAL_OPTIONS;\n      let rets = [];\n      if (series.length) {\n        series.forEach(item => {\n          if (item.type === 'lines') {\n            rets.push(item.name);\n          }\n        });\n      }\n      console.log('----window.GLOBAL_OPTIONS----', window.GLOBAL_OPTIONS);\n      return Array.from(new Set(rets));\n    }\n    function initFlight() {\n      // 获取到所有的数据\n      const allDatas = getFlightEnd(getFlightOrigins(datas).flightOriginsStart);\n      // 初始化飞行数据\n      if (allDatas && allDatas.length) {\n        for (let init = 0; init < allDatas.length; init++) {\n          const formdata = allDatas[init].label;\n          const formdataValue = allDatas[init].pos;\n          const { value = [] } = allDatas[init];\n          if (value && value.length) {\n            for (let y = 0; y < value.length; y++) {\n              const chinaDatas = value[y];\n              seriesFunc(formdata, chinaDatas, formdataValue)\n            }\n          }\n        }\n      }\n    }\n    initFlight();\n  \n    function openFullScreen() {\n      let el = document.getElementById(\"myChart\");\n      if (el.requestFullScreen) {\n        el.requestFullScreen();\n      } else if (el.mozRequestFullScreen) {\n        el.mozRequestFullScreen();\n      } else if (el.webkitRequestFullScreen) {\n        el.webkitRequestFullScreen();\n      } else if (el.msRequestFullScreen) {\n        el.msRequestFullScreen();\n      }\n    };\n    function exitFullScreen() {\n      if (document.exitFullScreen) {\n        document.exitFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      } else if (document.msExitFullScreen) {\n        document.msExitFullScreen();\n      }\n    }\n    // 是否为全屏\n    function isFullScreen() {\n      return !!(\n        document.fullscreen ||\n        document.mozFullScreen || \n        document.webkitIsFullScreen || \n        document.webkitFullScreen || \n        document.msFullScreen\n      );\n    };\n    // 获取鼠标在地图上移动的位置\n    function pos(event) {  //鼠标定位赋值函数\n      var posX = 0, posY = 0;  //临时变量值\n      var e = event || window.event;  //标准化事件对象\n      if (e.pageX || e.pageY) {  //获取鼠标指针的当前坐标值\n        posX = e.pageX;\n        posY = e.pageY;\n      } else if (e.clientX || e.clientY) {\n        posX = event.clientX + document.documentElement.scrollLeft + document.body.scrollLeft;\n        posY = event.clientY + document.documentElement.scrollTop + document.body.scrollTop;\n      }\n      return {\n        x: posX,\n        y: posY,\n      };\n    }\n    // 重置 layoutSize\n    function resetLayoutSize() {\n      // 如果是全屏下\n      if (isFullScreen()) {\n        window.GLOBAL_OPTIONS.layoutSize = window.screen.height;\n        window.GLOBAL_OPTIONS.layoutCenter = ['50%', '50%'];\n      } else {\n        if (window.screen.height > 950 && window.screen.height < 1200) {\n          window.GLOBAL_OPTIONS.layoutSize = 800;\n        } else if (window.screen.height > 1200) {\n          window.GLOBAL_OPTIONS.layoutSize = 1100;\n        } else {\n          window.GLOBAL_OPTIONS.layoutSize = 600;\n        }\n        window.GLOBAL_OPTIONS.layoutCenter = ['50%', '35%'];\n      }\n      console.log('-----resetLayoutSize---', window.GLOBAL_OPTIONS);\n    }\n    // 设置legend位置\n    function setLegendPos() {\n      let left = 340, bottom = window.screen.height > 1200 ? 395 : 345; // 页面初始化的时候，定位在该位置\n      const count = getLegendCount().length;\n      const datas = getLegendCount();\n      let rets = [];\n      if (datas && datas.length) {\n        datas.forEach(item => {\n          rets.push({\n            name: item,\n            icon: 'rect'\n          })\n        })\n      }\n      if (count === 1) {\n        if (isFullScreen()) {\n          left = 10;\n          bottom = 50;\n        } else {\n          left = 340;\n          bottom = window.screen.height > 1200 ? 420 : 370;\n        }\n      } else if (count === 2) {\n        if (isFullScreen()) {\n          left = 10;\n          bottom = 76;\n        } else {\n          left = 340;\n          bottom = window.screen.height > 1200 ? 446 : 396;\n        }\n      } else if (count === 3) {\n        if (isFullScreen()) {\n          left = 10;\n          bottom = 100;\n        } else {\n          left = 340;\n          bottom = window.screen.height > 1200 ? 470 : 420;\n        }\n      } else if (count === 4) {\n        if (isFullScreen()) {\n          left = 10;\n          bottom = 120;\n        } else {\n          left = 340;\n          bottom = window.screen.height > 1200 ? 496 : 446;\n        }\n      }\n      window.GLOBAL_OPTIONS.title[0].left = left;\n      window.GLOBAL_OPTIONS.title[0].bottom = bottom;\n      window.GLOBAL_OPTIONS.legend.data = rets;\n    }\n  \n    // 获取seriesIndex\n    function getSeriesIndex(options, params) {\n      const { data = {} } = params;\n      const { formName = '', toName = '' } = data;\n      const { series = [] } = options;\n      let seriesIndex = 0;\n      if (series.length) {\n        for (let s = 0; s < series.length; s++) {\n          const item = series[s];\n          if (item.type === 'lines') {\n            const sData = item.data;\n            const currentFormName = sData[0][0].formName;\n            const currentToName = sData[0][1].toName;\n            if ((formName === currentFormName) && (toName === currentToName)) {\n              seriesIndex = s;\n              break;\n            }\n          }\n        }\n      }\n      return seriesIndex;\n    }\n    \n    var option = {\n      layoutCenter: ['50%', '35%'],\n      layoutSize: (window.screen.height > 950 && window.screen.height < 1200) ? 800 : (window.screen.height > 1200 ? 1100 : 600),\n      title: [\n        {\n          text: '单位(吨)',\n          left: 340,\n          bottom: 446,\n          width: 100,\n          textStyle: {\n            fontSize: 12,\n            color: 'rgba(255,255,255,0.65)',\n          }\n        }\n      ],\n      legend: {\n        orient: 'vertical',\n        left: 340,\n        bottom: window.screen.height > 1200 ? 395 : 345,\n        itemWidth: 8,\n        itemHeight: 8,\n        itemGap: 12,\n        data: [\n          {\n            name: '9000以上',\n            icon: 'rect'\n          },\n          {\n            name: '6000～9000',\n            icon: 'rect'\n          },\n          {\n            name: '3000～6000',\n            icon: 'rect'\n          },\n          {\n            name: '0～3000',\n            icon: 'rect'\n          }\n        ],\n        textStyle: {\n          color: '#fff'\n        },\n      },\n      color: [\"#c51b37\", \"#e28e10\", \"#3f90ff\", \"#14be8b\"],\n      toolbox: {\n        show: true,\n        itemGap: 5,\n        right: 358,\n        top: window.screen.height > 1200 ? 72 : 122,\n        itemSize: 32,\n        zlevel: 1000000,\n        showTitle: false, // 鼠标移动上去不显示标题\n        feature: {\n          dataView: {\n            show: false,\n          },\n          dataZoom: {\n            show: true,\n            iconStyle: {\n              opacity: 0,\n            },\n          },\n          restore: { show: false },\n          saveAsImage: { show: false },\n          // 全屏\n          myFull: {\n            show: true,\n            title: '',\n            icon: 'image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png',\n            onHover: (e) => {\n              console.log('---onHover---', e);\n              var opts = e.getOption();\n              if (isFullScreen()) {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i3/O1CN01vgzs4g1xQCDGIka2M_!!6000000006437-2-tps-200-200.png\";\n              } else {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i3/O1CN01PPeB6j1pA9PUu5aL3_!!6000000005319-2-tps-200-200.png\";\n              }\n              china.setOption(opts);\n            },\n            onHide: (e) => {\n              var opts = e.getOption();\n              if (isFullScreen()) {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i4/O1CN01WjTtjv1xCuj5ZiLyZ_!!6000000006408-2-tps-200-200.png\";\n              } else {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png\";\n              }\n              china.setOption(opts);\n            },\n            onclick: (e) => {\n              var opts = e.getOption();\n              if (isFullScreen()) {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png\";\n                opts.toolbox[0].right = 358;\n                opts.toolbox[0].top = window.screen.height > 1200 ? 72 : 122;\n  \n                opts.layoutCenter = ['50%', '35%'];\n  \n                if (window.screen.height > 950 && window.screen.height < 1200) {\n                  opts.layoutSize = 800;\n                } else if (window.screen.height > 1200) {\n                  opts.layoutSize = 1100;\n                } else {\n                  opts.layoutSize = 600;\n                }\n                opts.legend[0].left = 340;\n                opts.legend[0].bottom = window.screen.height > 1200 ? 490 : 345;\n                // 如果是全屏模式，就退出全屏\n                exitFullScreen();\n              } else {\n                opts.toolbox[0].feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i4/O1CN01WjTtjv1xCuj5ZiLyZ_!!6000000006408-2-tps-200-200.png\";\n                opts.legend[0].left = 10;\n                opts.legend[0].bottom = 20;\n  \n                opts.layoutCenter = ['50%', '50%'];\n                opts.layoutSize = window.screen.height;\n  \n                opts.toolbox[0].top = 30;\n                opts.toolbox[0].right = 30;\n                // opts.geo[0].zoom = 1.5;\n                // 否则，打开全屏\n                openFullScreen();\n              }\n              if (opts.series[GLOBAL_SERIES_INDEX]) {\n                opts.series[GLOBAL_SERIES_INDEX].lineStyle.width = 1;\n              }\n              let left = 340, bottom = window.screen.height > 1200 ? 395 : 345; // 页面初始化的时候，定位在该位置\n              const count = getLegendCount().length;\n              if (count === 1) {\n                if (isFullScreen()) {\n                  left = 340;\n                  bottom = window.screen.height > 1200 ? 520 : 370;\n                } else {\n                  left = 10;\n                  bottom = 50;\n                }\n              } else if (count === 2) {\n                if (isFullScreen()) {\n                  left = 340;\n                  bottom = window.screen.height > 1200 ? 540 : 396;\n                } else {\n                  left = 10;\n                  bottom = 76;\n                }\n              } else if (count === 3) {\n                if (isFullScreen()) {\n                  left = 340;\n                  bottom = window.screen.height > 1200 ? 565 : 420;\n                } else {\n                  left = 10;\n                  bottom = 100;\n                }\n              } else if (count === 4) {\n                if (isFullScreen()) {\n                  left = 340;\n                  bottom = window.screen.height > 1200 ? 584 : 446;\n                } else {\n                  left = 10;\n                  bottom = 120;\n                }\n              }\n              opts.title[0].left = left;\n              opts.title[0].bottom = bottom;\n              console.log('---opts-1223444--', opts);\n              window.GLOBAL_OPTIONS = opts;\n  \n              console.log('--xxx--opts---', opts);\n              // 解决窗口缩放事件导致不重新渲染的bug\n              setTimeout(() => {\n                china.setOption(opts);\n              }, 350)\n            }\n          },\n        }\n      },\n      tooltip: {\n        show: true,\n        // triggerOn: 'click',\n        trigger: 'item',\n        backgroundColor: 'rgba(27, 28, 33, 0.85)',\n        borderColor: 'rgba(27, 28, 33, 0.85)',\n        showDelay: 0, // 浮层显示的延迟\n        hideDelay: 100, //浮层隐藏的延迟\n        enterable: true, // 鼠标是否可进入提示框浮层中\n        transitionDuration: 0, // 提示框浮层的移动动画过度时间 设置0的时候会紧跟着鼠标移动\n        extraCssText: 'z-index:100000',\n        textStyle: {\n          color: '#fff',\n        },\n        formatter: function(params, ticket, callback) {\n          const { data = {} } = params;\n          const {\n            formName = '',\n            item = {},\n            toName = ''\n          } = data;\n          if (!formName) {\n            return;\n          }\n          // 如果已经点击了飞线图 就不需要再提示了\n          if (isAlreadyClickFlight) {\n            return;\n          }\n          setVisible(false);\n          setClick(true);\n          const {\n            unitCarbonEmission,\n            totalCarbonEmission,\n            totalTruckSize,\n            totalKilometres,\n            carSizeData = [],\n          } = item;\n  \n          // 弹窗柱状图显示\n          const rets = [];\n          carSizeData && carSizeData.length && carSizeData.forEach(item => {\n            rets.push({\n              label: item[0],\n              value: item[1],\n            })\n          })\n  \n          if (isFullScreen()) {\n            let legend = {};\n            let toolbox = {};\n    \n            if (option.toolbox[0]) {\n              toolbox = option.toolbox[0];\n            } else {\n              toolbox = option.toolbox;\n            }\n            toolbox.left = null;\n            toolbox.top = 40;\n            toolbox.right = 30;\n            toolbox.bottom = null;\n            toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i4/O1CN01WjTtjv1xCuj5ZiLyZ_!!6000000006408-2-tps-200-200.png\";\n    \n            // 标题\n            option.title[0].left = 10;\n            option.title[0].bottom = 120;\n            if (option.legend[0]) {\n              legend = option.legend[0];\n            } else {\n              legend = option.legend;\n            }\n            legend.left = 10;\n            legend.bottom = 20;\n          } else {\n            \n            let toolbox = {};\n            let legend = {};\n            if (option.toolbox[0]) {\n              toolbox = option.toolbox[0];\n            } else {\n              toolbox = option.toolbox;\n            }\n            toolbox.top = window.screen.height > 1200 ? 72 : 122;\n            toolbox.right = 358;\n    \n            toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png\";\n            \n            option.title[0].left = 340;\n            option.title[0].bottom = 200;\n    \n            if (option.legend[0]) {\n              legend = option.legend[0];\n            } else {\n              legend = option.legend;\n            }\n            legend.left = 340;\n            legend.bottom = window.screen.height > 1200 ? 395 : 345;\n          }\n          setData2(rets);\n          //根据业务自己拓展要显示的内容\n          var res = \"\";\n          res = \"<div class='tool-tip'>\" + \n                  \"<div class='title'><span>\"+formName+\"</span>-<span>\"+toName+\"</span></div>\" + \n                  \"<div class='t-content'>\"+\n                    \"<div><span class='desc'>单位公里排放量</span><span class='t-content'><i>\"+unitCarbonEmission+\"</i>吨/公里</span></div>\" + \n                    \"<div><span class='desc'>碳排量</span><span class='t-content'><i>\"+totalCarbonEmission+\"</i>吨</span></div>\" + \n                    \"<div><span class='desc'>总车次</span><span class='t-content'><i>\"+totalTruckSize+\"</i>次</span></div>\" + \n                    \"<div><span class='desc'>总公里数</span><span class='t-content'><i>\"+totalKilometres+\"</i>公里</span></div>\" + \n                  \"</div>\"\n                \"</div>\";\n          return res;\n        }\n      },\n      backgroundColor: new echarts.graphic.LinearGradient(0.1, 1, 1, 0.5, [\n        {\n          offset: 0,\n          color: '#0f0f0f', // 0% 处的颜色\n        },\n        {\n          offset: 0.2,\n          color: '#272c37', // 0% 处的颜色\n        },\n        {\n          offset: 0.75,\n          color: '#272c37', // 0% 处的颜色\n        },\n        {\n          offset: 0.9,\n          color: '#0f0f0f', // 0% 处的颜色\n        },\n        {\n          offset: 1,\n          color: '#0f0f0f' // 100% 处的颜色\n        }\n      ], false),\n    \n      animation: false, // 解决阻止拖拽和缩放时上下图层不同步的问题\n      geo: [{\n        map: 'china', // 地图名\n        zlevel: 2, // geo显示级别，默认是0\n        roam: true, // 设置为false，不启动roam缩放\n        scaleLimit: { //滚轮缩放的极限控制\n          min: 0.5,\n          max: 3\n        },\n        selectedMode: false, // 不让点击\n        zoom: 1,\n        label: {\n          emphasis: {\n            show: false,\n            areaColor: 'null',\n          }\n        },\n        regions: [\n          {\n            name: \"南海诸岛\",\n            itemStyle: {\n              // 隐藏南海诸岛\n              normal: {\n                opacity: 0,\n              }\n            }\n          }\n        ],\n        itemStyle: { // 顶层地图的样式，如地图区域颜色，边框颜色，边框大小等\n          normal: {\n            borderColor: '#33587F', // 边框颜色\n            areaColor:'#31344a', // 地图区域颜色\n            borderWidth: 1, // 边框大小\n          },\n          emphasis: {\n            areaColor: 'null',\n            color: 'rgba(37, 43, 61, 0)', //悬浮背景\n          }\n        }\n      },{\n        map: 'china',\n        zoom: 1,\n        roam: true,\n        selectedMode: false, // 不让点击\n        scaleLimit: { //滚轮缩放的极限控制\n          min: 0.5,\n          max: 3\n        },\n        label: {\n          emphasis: {\n            show: false,\n            areaColor: 'null',\n          }\n        },\n        regions: [\n          {\n            name: \"南海诸岛\",\n            itemStyle: {\n              // 隐藏南海诸岛\n              normal: {\n                opacity: 0,\n              }\n            }\n          }\n        ],\n        itemStyle: { // 地图的样式，如地图区域颜色，边框颜色，边框大小等\n          normal: {\n           borderColor: '#56b7ec', // 边框颜色\n           areaColor:'#31344a', // 地图区域颜色\n           borderWidth: 4, // 边框大小\n           \n           // 边框设置阴影 颜色渐变\n           shadowBlur: 10,\n           shadowColor: 'rgba(86, 183, 236, .5)',\n           shadowOffsetX: 1,\n           shadowOffsetY: 1,\n          },\n          emphasis: {\n            color: 'rgba(37, 43, 61, 0)', //悬浮背景\n            areaColor: null,\n          }\n        }\n      }],\n      series: series,\n      zlevel: 1,\n    };\n    option.series.unshift({\n      type: 'map',\n      map: 'china',\n      selectedMode: false, // 不让点击\n      label: {\n        show: false,\n      },\n      roam: true,\n      geoIndex: 0,\n      data: [],\n    })\n  \n    window.GLOBAL_OPTIONS = option;\n    // 首次渲染页面\n    useEffect(() => {\n      let mapWidth = document.getElementById('myChart').offsetWidth;\n    \n      var screenWidth = window.screen.width;\n      let h = window.screen.height;\n      console.log('----window.screen.height---', window.screen.height);\n      \n      if (window.screen.height > 1200) {\n        h = document.body.clientHeight\n      } else if (window.screen.height < 900) {\n        h = 900;\n      }\n  \n      document.getElementById('china').style.height = h + 'px';\n  \n      china = echarts.init(document.getElementById('china'));\n  \n      setLegendPos();\n  \n      console.log('----初始化---', window.GLOBAL_OPTIONS);\n  \n      china.setOption(window.GLOBAL_OPTIONS);\n  \n      const ulList = document.getElementById('ul-list');\n      const liLists = ulList.getElementsByTagName('li');\n  \n      // 设置画布的高度\n      document.getElementById('myChart').style.height = h - 48 + 'px';\n  \n      // 监听鼠标滚动的坐标\n      document.onmousemove = function (event) {\n        const values = pos(event);\n        if (!isAlreadyClickFlight) {\n          setXYValue(values);\n        }\n      }\n      \n      document.onclick = function(event) {\n        if (!isFixed) {\n          setFixed(false);\n        }\n        if (!isClick) {\n          setClick(false);\n        }\n        if (!isVisible) {\n          setVisible(false);\n        }\n        isAlreadyClickFlight = false;\n        event.stopPropagation();\n      }\n  \n      ulList.addEventListener('click', function(e) {\n        e.stopPropagation();\n        console.log('---window.GLOBAL_OPTIONS---', window.GLOBAL_OPTIONS);\n        const target = e.target || e.srcElement;\n        const cIndex = target.getAttribute('data-index');\n        setCurrentIndex(cIndex);\n  \n        // 先删除所有的类名\n        for (let i = 0; i < liLists.length; i++) {\n            liLists[i].classList.remove('current');\n        }\n        var currentClass = target.getAttribute('class');\n        if (currentClass) {\n            currentClass = currentClass.concat(\" current\");\n        } else {\n            currentClass = \"current\";\n        }\n        target.setAttribute(\"class\", currentClass);\n        initFlight();\n        if (isFullScreen()) {\n          let legend = {};\n          let toolbox = {};\n  \n          if (window.GLOBAL_OPTIONS.toolbox[0]) {\n            toolbox = window.GLOBAL_OPTIONS.toolbox[0];\n          } else {\n            toolbox = window.GLOBAL_OPTIONS.toolbox;\n          }\n          toolbox.left = null;\n          toolbox.top = 30;\n          toolbox.right = 30;\n          toolbox.bottom = null;\n          toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i4/O1CN01WjTtjv1xCuj5ZiLyZ_!!6000000006408-2-tps-200-200.png\";\n  \n          // 标题\n          window.GLOBAL_OPTIONS.title[0].left = 10;\n          window.GLOBAL_OPTIONS.title[0].bottom = 120;\n          if (window.GLOBAL_OPTIONS.legend[0]) {\n            legend = window.GLOBAL_OPTIONS.legend[0];\n          } else {\n            legend = window.GLOBAL_OPTIONS.legend;\n          }\n          legend.left = 10;\n          legend.bottom = 20;\n        } else {\n          let toolbox = {};\n          let legend = {};\n          if (window.GLOBAL_OPTIONS.toolbox[0]) {\n            toolbox = window.GLOBAL_OPTIONS.toolbox[0];\n          } else {\n            toolbox = window.GLOBAL_OPTIONS.toolbox;\n          }\n          toolbox.top = window.screen.height > 1200 ? 72 : 122;\n          toolbox.right = 358;\n  \n          toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png\";\n          \n          window.GLOBAL_OPTIONS.title[0].left = 340;\n          window.GLOBAL_OPTIONS.title[0].bottom = 200;\n  \n          if (window.GLOBAL_OPTIONS.legend[0]) {\n            legend = window.GLOBAL_OPTIONS.legend[0];\n          } else {\n            legend = window.GLOBAL_OPTIONS.legend;\n          }\n          legend.left = 340;\n          legend.bottom = window.screen.height > 1200 ? 395 : 345;\n        }\n        const { geo = [] } = window.GLOBAL_OPTIONS;\n        if (geo && geo.length) {\n          geo.forEach(item => {\n            item.zoom = GLOBAL_ZOOM;\n          });\n        };\n        setLegendPos();\n        resetLayoutSize();\n        if (window.GLOBAL_OPTIONS.series[GLOBAL_SERIES_INDEX]) {\n          window.GLOBAL_OPTIONS.series[GLOBAL_SERIES_INDEX].lineStyle.normal.width = GLOBAL_LINE_WIDTH;\n        }\n        console.log('----click---click---window.GLOBAL_OPTIONS----', window.GLOBAL_OPTIONS);\n        china.setOption(window.GLOBAL_OPTIONS);\n      });\n  \n      window.onresize = function() {\n        \n        let h;\n        let w = mapWidth;\n        \n        if (isFullScreen()) {\n          setFull(true);\n          h = window.screen.height;\n          w = screenWidth;\n        } else {\n          setFull(false);\n          h = window.screen.height;\n          w = mapWidth; // 要加200\n        }\n        console.log('---h---', h);\n        china.resize({\n          height: h,\n          width: w,\n        });\n      }\n      // 捕捉到georoam事件，使下层的geo随着上层的geo一起缩放拖拽\n      china.off('georoam').on('georoam', function(params) {\n        var option = china.getOption();\n  \n        const { geo = [] } = option;\n        if (geo && geo.length) {\n          GLOBAL_ZOOM = geo[0].zoom || 1;\n        }\n        if (params.zoom != null && params.zoom != undefined) { // 捕捉到缩放时\n          option.geo[1].zoom = option.geo[0].zoom; // 下层geo的缩放跟着上层的geo一起改变\n          option.geo[1].center = option.geo[0].center; // 下层的geo的中心位置随着上层的geo一起改变\n        } else {\n          option.geo[1].center = option.geo[0].center; // 下层的geo的中心位置随着上层的geo一起改变\n        }\n        china.setOption(option);\n      });\n      china.off('mouseout').on('mouseout', function(params) {\n        if (!isAlreadyClickFlight) {\n          if (params.data) { // 有数据说明移到了飞线图那个地方\n            setVisible(true);\n          }\n        }\n      });\n      china.off('click').on('click', { type: 'effectScatter' }, function(params) {\n        let {\n          data = {},\n        } = params;\n        initFlight();\n        setLegendPos();\n        resetLayoutSize();\n        console.log('----window.GLOBAL_OPTIONS----', window.GLOBAL_OPTIONS);\n        \n        const cloneOptions = _.cloneDeep(window.GLOBAL_OPTIONS);\n  \n        let seriesIndex = getSeriesIndex(cloneOptions, params);\n  \n        if (cloneOptions.series[seriesIndex] && cloneOptions.series[seriesIndex].lineStyle) {\n          GLOBAL_LINE_WIDTH = 6;\n          // 改变状态，已经点击了飞线图\n          GLOBAL_SERIES_INDEX = seriesIndex;\n          setTimeout(() => {\n            cloneOptions.series[seriesIndex].lineStyle.normal.width = 6;\n            setFixed(true);\n            setClick(true);\n            setVisible(false);\n            isAlreadyClickFlight = true;\n          }, 300);\n          const datas = params.data ? params.data : null;\n          setLineData(datas);\n        }\n        if (isFullScreen()) {\n          let legend = {};\n          let toolbox = {};\n  \n          if (cloneOptions.toolbox[0]) {\n            toolbox = cloneOptions.toolbox[0];\n          } else {\n            toolbox = cloneOptions.toolbox;\n          }\n          toolbox.left = null;\n          toolbox.top = 30;\n          toolbox.right = 30;\n          toolbox.bottom = null;\n          toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i4/O1CN01WjTtjv1xCuj5ZiLyZ_!!6000000006408-2-tps-200-200.png\";\n          \n          if (cloneOptions.legend[0]) {\n            legend = cloneOptions.legend[0];\n          } else {\n            legend = cloneOptions.legend;\n          }\n          legend.left = 10;\n          legend.bottom = 20;\n        } else {\n          \n          let toolbox = {};\n          let legend = {};\n          if (cloneOptions.toolbox[0]) {\n            toolbox = cloneOptions.toolbox[0];\n          } else {\n            toolbox = cloneOptions.toolbox;\n          }\n          toolbox.top = window.screen.height > 1200 ? 72 : 122;\n          toolbox.right = 358;\n  \n          toolbox.feature.myFull.icon = \"image://https://img.alicdn.com/imgextra/i1/O1CN01uVpZCF1V30vM3BxGI_!!6000000002596-2-tps-200-200.png\";\n  \n          if (cloneOptions.legend[0]) {\n            legend = cloneOptions.legend[0];\n          } else {\n            legend = cloneOptions.legend;\n          }\n          legend.left = 340;\n          legend.bottom = window.screen.height > 1200 ? 395 : 345;\n        }\n        const { geo = [] } = cloneOptions;\n        if (geo && geo.length) {\n          geo.forEach(item => {\n            item.zoom = GLOBAL_ZOOM;\n          });\n        };\n        \n        console.log('----isFull--isFull000---', cloneOptions);\n        window.GLOBAL_OPTIONS = cloneOptions;\n        setTimeout(() => {\n          china.setOption(cloneOptions);\n        }, 350);\n        const { item = {} } = data;\n        const rets = [];\n        const { carSizeData = [] } = item;\n        if (carSizeData && carSizeData.length) {\n          carSizeData.forEach(item => {\n            rets.push({\n              label: item[0],\n              value: item[1],\n            })\n          });\n          setData2(rets);\n        }\n        params.event.event.stopPropagation();\n      });\n      const closed = document.getElementById('closed');\n      const showBtn = document.getElementById('show-table-btn');\n      closed?.addEventListener('click', function(e) {\n        console.log('---closed---');\n        setVisible(true);\n        e.stopPropagation();\n      });\n      showBtn?.addEventListener('click', function(e) {\n        setVisible(false);\n        e.stopPropagation();\n      });\n    }, [datas]);\n    \n    console.log(1111);\n    return (\n      <div>\n        <div className=\"mychart-container\" id=\"myChart\">\n          <div id=\"wrapMap\" className={ isFull ? '' : (window.screen.height > 1200 ? 'wrapMap current' : 'wrapMap' ) }>\n            <div id=\"china\"></div>\n            <div className={ isFull ? 'south-sea isfull' : ( window.screen.height > 1200 ? 'south-sea current' : 'south-sea')}></div>\n          </div>\n          <ul id=\"ul-list\" className={ isFull ? 'ul-list isfull' : 'ul-list'}>\n            <li className=\"current\" data-index=\"0\">碳排量</li>\n            <li data-index=\"1\">单位公里碳排量</li>\n          </ul>\n          <div className=\"show-table-container\">\n            <div id=\"show-table\" className={\n              !isFull ? (isVisible ? \"show-table slideOutLeft\" : (isClick ? \"show-table slideInLeft\" : \"show-table slideOutLeft none\")) : \n              (isVisible ? \"show-table slideOutLeft isfull\" : (isClick ? \"show-table slideInLeft isfull\" : \"show-table slideOutLeft isfull none\"))\n            }>\n              <div className=\"closed\" id=\"closed\"></div>\n              <div className=\"msg1\">车次</div>\n              <div className={ isFull ? 'msg2 isfull' : 'msg2'}>单位公里碳排放量(t/km)</div>\n              <div className=\"table-content\">\n                <Chart height={ isFull ? 233 : 155 } autoFit data={data2} padding={[30, 30, 30, 50]} >\n                  <Interval position=\"label*value\" size={8} />\n                  <Tooltip visible={false} />\n                  <Axis\n                    name=\"value\"\n                    label={\n                      {\n                        style: {\n                          fill: 'rgba(255,255,255,0.65)',\n                        }\n                      }\n                    }\n                    grid={\n                      {\n                        line: {\n                          type: 'line',\n                          style: {\n                            stroke: '#2b2c38'\n                          }\n                        }\n                      }\n                    }\n                  />\n                  <Axis\n                    name=\"label\"\n                    // visible={false}\n                    label={\n                      {\n                        style: {\n                          fill: 'rgba(255,255,255,0.65)',\n                        }\n                      }\n                    }\n                    line={{\n                      style: {\n                        stroke: '#2b2c38'\n                      }\n                    }}\n                    tickLine={{\n                      style: {\n                        stroke: '#2b2c38'\n                      }\n                    }}\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n          <div id=\"show-table-btn\" className={ \n            !isFull ? (isVisible ? 'show-table-btn' : 'show-table-btn none') : (isVisible ? 'show-table-btn isfull' : 'show-table-btn isfull none') \n          }></div>\n          <div \n            className={ isFixed ? \"alert-pos isFixed\" : 'alert-pos' }\n            style={{ top: xy_value ? xy_value.y + 'px' : '-9999px', left: xy_value ? xy_value.x + 'px' : '-9999px' }}\n          >\n            <div className='tool-tip'>\n              <div className='title'>\n                <span>{line_datas && line_datas.formName}</span>-\n                <span>{line_datas && line_datas.toName}</span>\n              </div>\n              <div className='t-content'>\n                <div>\n                  <span className='desc'>单位公里排放量</span>\n                  <span className='t-content'>\n                    <i>{line_datas && line_datas.item && line_datas.item.unitCarbonEmission}</i>吨/公里\n                  </span>\n                </div>\n                <div>\n                  <span className='desc'>碳排量</span>\n                  <span className='t-content'>\n                    <i>{line_datas && line_datas.item && line_datas.item.totalCarbonEmission}</i>吨\n                  </span>\n                </div>\n                <div>\n                  <span className='desc'>总车次</span>\n                  <span className='t-content'><i>{line_datas && line_datas.item && line_datas.item.totalTruckSize}</i>次</span>\n                </div>\n                <div>\n                  <span className='desc'>总公里数</span>\n                  <span className='t-content'><i>{line_datas && line_datas.item && line_datas.item.totalKilometres}</i>公里</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"isFull_default\"></div>\n        <div className=\"isShinkage_default\"></div>\n        <div className=\"isFull_default_hover\"></div>\n        <div className=\"isShinkage_default_hover\"></div>\n        <div className=\"show-table-btn-hover\"></div>\n        <div className=\"show-table-closed-hover\"></div>\n      </div>\n    );\n  };\n  \n  export default MyChart;","import React from 'react';\nimport '@assets/css/app.css';\nimport MyChart from './MyChart';\n\nconst mapData = [\n  {\n    \"shipment\":\"天津市\",\n    \"shipmentCoordinate\":[117.200983,39.084158],\n    \"destination\":\"上海市\",\n    \"destinationCoordinate\":[121.473701,31.230416],\n    \"unitCarbonEmission\":0.0005,\n    \"totalCarbonEmission\":1000.6000,\n    \"totalTruckSize\":2,\n    \"totalKilometres\":2300.0000,\n    \"carSizeData\":[[\"0~0.25\",0],[\"0.25~0.50\",2],[\"0.50~0.75\",0],[\"0.75~1\",0]]\n  },\n  {\n    \"shipment\":\"天津市\",\n    \"shipmentCoordinate\":[117.200983,39.084158],\n    \"destination\":\"北京市\",\n    \"destinationCoordinate\":[116.407526,39.90403],\n    \"unitCarbonEmission\":0.0007,\n    \"totalCarbonEmission\":1000.3200,\n    \"totalTruckSize\":2,\n    \"totalKilometres\":360.0000,\n    \"carSizeData\":[[\"0~0.25\",0],[\"0.25~0.50\",1],[\"0.50~0.75\",0],[\"0.75~1\",1]]\n   },\n   {\n     \"shipment\":\"天津市\",\n     \"shipmentCoordinate\":[117.200983,39.084158],\n     \"destination\":\"太仓市\",\n     \"destinationCoordinate\":[121.13055,31.457735],\n     \"unitCarbonEmission\":0.0008,\n     \"totalCarbonEmission\":1872.3000,\n     \"totalTruckSize\":1,\n     \"totalKilometres\":1100.0000,\n     \"carSizeData\":[[\"0~0.25\",0],[\"0.25~0.50\",0],[\"0.50~0.75\",0],[\"0.75~1\",1]]\n   },\n   { \n     \"shipment\":\"天津市\",\n     \"shipmentCoordinate\":[117.200983,39.084158],\n     \"destination\":\"常熟市\",\n     \"destinationCoordinate\":[120.752481,31.654376],\n     \"unitCarbonEmission\":0.0005,\n     \"totalCarbonEmission\":502.0000,\n     \"totalTruckSize\":1,\n     \"totalKilometres\":1000.0000,\n     \"carSizeData\":[[\"0~0.25\",0],[\"0.25~0.50\",1],[\"0.50~0.75\",0],[\"0.75~1\",0]]\n   },\n   {\n     \"shipment\":\"天津市\",\n     \"shipmentCoordinate\":[117.200983,39.084158],\n     \"destination\":\"杭州市\",\n     \"destinationCoordinate\":[120.15507,30.274084],\n     \"unitCarbonEmission\":0.0010,\n     \"totalCarbonEmission\":1154.0000,\n     \"totalTruckSize\":3,\n     \"totalKilometres\":3900.0000,\n     \"carSizeData\":[[\"0~0.5\",1],[\"0.5~1.0\",0],[\"1.0~1.5\",2],[\"1.5~2\",0]]\n   },\n   {\n     \"shipment\":\"天津市\",\n     \"shipmentCoordinate\":[117.200983,39.084158],\n     \"destination\":\"湖州市\",\n     \"destinationCoordinate\":[120.086823,30.894348],\n     \"unitCarbonEmission\":0.0005,\n     \"totalCarbonEmission\":1577.3000,\n     \"totalTruckSize\":1,\n     \"totalKilometres\":1150.0000,\n     \"carSizeData\":[[\"0~0.25\",0],[\"0.25~0.50\",1],[\"0.50~0.75\",0],[\"0.75~1\",0]]\n   },\n   {\n     \"shipment\":\"天津市\",\n     \"shipmentCoordinate\":[117.200983,39.084158],\n     \"destination\":\"廊坊市\",\n     \"destinationCoordinate\":[116.683752,39.538047],\n     \"unitCarbonEmission\":0.0009,\n     \"totalCarbonEmission\":1147.9200,\n     \"totalTruckSize\":11,\n     \"totalKilometres\":1320.0000,\n     \"carSizeData\":[[\"0~0.5\",2],[\"0.5~1.0\",6],[\"1.0~1.5\",3],[\"1.5~2\",0]]\n   },\n ];\nconst App = () => {\n  return (\n    <div>\n      <MyChart datas={mapData} />\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { Provider } from 'react-redux';\nimport { persistor } from '@store';\nimport store from '@store';\nimport App from './pages/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"mappingsvJA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;;ACbA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;;ACfA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;;ACjBA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAQA;AAEA;AAKA;AAEA;AACA;AAAA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAVA;AADA;AAkBA;AAjCA;AAoCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAFA;AAtCA;AA4CA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AA5CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAOA;AACA;AADA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AADA;AAzBA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAzGA;AAbA;AARA;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;AA9GA;AAgHA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AAUA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AAHA;AANA;AA3BA;AAuCA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AAUA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAAA;AACA;AAFA;AAZA;AA1BA;AA4CA;AACA;AA1YA;AA4YA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AADA;AADA;AAMA;AAEA;AACA;AACA;AACA;AADA;AAFA;AADA;AAVA;AAqBA;AADA;AAGA;AAEA;AACA;AADA;AADA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAfA;AAyBA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;;AC7yCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AAEA;AAAA;AAGA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}